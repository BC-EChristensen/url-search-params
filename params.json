{"name":"Url-search-params","tagline":"Simple polyfill for URLSearchParams standard","body":"url-search-params\r\n=================\r\n\r\n[![build status](https://secure.travis-ci.org/WebReflection/url-search-params.png)](http://travis-ci.org/WebReflection/url-search-params)\r\n\r\nThis is a polyfill for the [URLSearchParams API](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams).\r\n\r\nIt is possible to simply include [build/url-search-params.js](build/url-search-params.js) or grab it via npm.\r\n\r\n```\r\nnpm install url-search-params\r\n```\r\n\r\nThe function is exported directly.\r\n```js\r\nvar URLSearchParams = require('url-search-params');\r\n```\r\n\r\nMIT Style License\r\n\r\n#### About HTMLAnchorElement.prototype.searchParams\r\nThis property is already implemented in Firefox and polyfilled here only for browsers that exposes getters and setters\r\nthrough the `HTMLAnchorElement.prototype`.\r\n\r\nIn order to know if such property is supported, you **must** do the check as such:\r\n```\r\nif ('searchParams' in HTMLAnchorElement.prototype) {\r\n  // polyfill for <a> links supported\r\n}\r\n```\r\nIf you do this check instead:\r\n```js\r\nif (HTMLAnchorElement.prototype.searchParams) {\r\n  // throws a TypeError\r\n}\r\n```\r\nthis polyfill will reflect natiive behavior, throwing a type error due access to a property in a non instance of `HTMLAnchorElement`.\r\n\r\nNothing new to learn here, [just a reminder](http://webreflection.blogspot.co.uk/2011/08/please-stop-reassigning-for-no-reason.html).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}